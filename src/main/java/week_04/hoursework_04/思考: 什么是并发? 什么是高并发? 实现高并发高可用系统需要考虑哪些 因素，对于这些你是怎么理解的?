并发

指的是对象上的竞态条件.如何正确的让多个线程的访问读写串行化.

高并发

高指的是高频率.由于频率高而且对并发做了线程安全的措施.所以在极端情况下,程序执行上会变成串行化.

实现高并发需要考虑哪些因素

1 线程安全,通过jdk提供的各种工具类实现.
2 对应业务场景,使用适合的工具类.例如只要求写安全的场景可以多用cas实现的类.
3 低延迟.高并发处理后性能降低,由于串行化的原因.可以考虑数据分离,聚合的MapReduce思想.例如LongAdder
4 冗余消费处理.单机节点性能瓶颈后,通过冗余手段提高吞吐量


实现高可用系统需要考虑哪些因素

1 冗余 几乎都这么做,主备,主从等方案.
2 考虑强一致性还是最终一致性.不同业务场景下的实现.强一致性需要同步同步,最终一致性一般采用异步同步
3 恢复 恢复数据方案基于日志.完全同步还是增量同步.例如redis采用rdb+aof机制同步.全量+增量
4 选举 主从下一般都是n/2 + 1.redis通过配置id > 数据完整度 等优先级进行选主