饿汉式

优点：实现简单，不存在多线程问题，直接声明一个私有对象，然后对外提供一个获取对象的方法。
缺点：class 类在被加载的时候创建Singleton实例，如果对象创建后一直没有使用，则会浪费很大的内存空间，此方法不适合创建大对象。

懒汉式

优点：节省内存空间，在使用的时候才会创建；

缺点：线程不安全，在多线程下，可能会创建多个实例(一定要重视这个问题，有时候如果在单例对象的构造方法中做了某些重要操作，创建多个实例可能会造成可怕后果，如：打开Android的Sqlite数据库连接)。
如果用了synchronized,会影响并发量，每次调用getInstance()方法都会线程同步，效率十分低下。最重要的是，当创建好实例对象之后，就不必继续进行同步了。


懒汉式（double check）

优点：支持多线程，并发量高，且以懒汉式加载，不浪费内存空间。

缺点：一时找不出缺点，非要说缺点的话，就是实现比较麻烦。

